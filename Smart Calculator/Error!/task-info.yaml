type: edu
custom_name: stage5
files:
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class CalcTest(StageTest):
        def generate(self) -> List[TestCase]:
            cases = {"100 + 200 - 300\n/exit": "0\nBye!",
                     "4 + 6 - 8\n\n\n2 - 3 - 4\n\n8 + 7 - 4\n/exit": "2\n-5\n11\nBye!",
                     "abc\n123+\n+15\n18 22\n\n-22\n22-\n/exit": "Invalid expression\nInvalid expression\n15\nInvalid expression\n-22\nInvalid expression\nBye!",
                     "/go\n/exit": "Unknown command\nBye!"}
            return [TestCase(stdin=case,
                             attach=cases[case])
                    for case in cases]

        def check(self, reply: str, attach) -> CheckResult:
            return CheckResult(reply.strip() == attach.strip(), "")


    if __name__ == '__main__':
        CalcTest("calculator.calculator").run_tests()
  learner_created: false
- name: calculator/calculator.py
  visible: true
  text: |
    import string


    def is_digit(s):
        try:
            int(s)
            return True
        except ValueError:
            return False


    def convert_to_calc(seq):
        return [int(s) if is_digit(s) else s.strip() for s in seq]


    while True:
        i = input()
        if i == '/exit':
            print('Bye!')
            break
        if i == '/help':
            print('The calculator works with + and -')
        i = i.split()
        if len(i) == 0:
            continue
        elif len(i) == 1:
            print(i[0])
        else:
            num = convert_to_calc(i)
            result = 0
            operation = None
            for i, value in enumerate(num):
                if i == 0:
                    result = value
                    continue
                if i % 2 == 1:
                    if '-' in value:
                        operation = '+' if len(value) % 2 == 0 else '-'
                    else:
                        operation = '+'
                if i % 2 == 0:
                    if operation == '-':
                        result -= value
                    else:
                        result += value
                    operation = None
            print(result)
  learner_created: true
feedback_link: https://hyperskill.org/projects/74/stages/413/implement
status: Solved
record: 5
